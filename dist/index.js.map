{"mappings":"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","sources":["src/index.ts","src/scrollbar/index.ts","src/scrollbar/track.ts","src/scrollbar/thumb.ts","src/scrollbar/direction.ts","src/events/index.ts"],"sourcesContent":["import Scrollbar from \"./scrollbar/index\";\nimport Direction from \"./scrollbar/direction\";\nimport { Options } from \"./interfaces\";\n\nclass EnchantScrollbar {\n  /* \n          scrollableDiv is a div that we create and copy the content of the element to it.\n          We set the element's overflow to hidden and the scrollableDiv's overflow to auto.\n          This way, we can hide the scrollbar of the element and use the scrollbar of the scrollableDiv.\n      */\n  private element: HTMLElement;\n  private scrollableDiv: HTMLElement;\n  private scrollbar: Scrollbar;\n  private options: any;\n\n  /* \n          @param element: HTMLElement\n          @param options: any\n      */\n  constructor() {\n    // default options\n    this.options = {\n      scrollbarWidth: 8,\n      borderRadius: 8,\n      zIndex: 999,\n      theme: \"light\",\n      minimizeOnBlur: true,\n      autoHide: true,\n      autoHideDelay: 1000,\n      padding: 0,\n    };\n  }\n\n  init(element?: HTMLElement, options?: Options): void {\n    this.element = element;\n\n    if (element) {\n      this.element.style.position = \"relative\";\n      this.element.style.overflow = \"hidden\";\n\n      // We create a div inside the element so it can be scrolled only, not the element itself and the scrollbar\n      this.scrollableDiv = document.createElement(\"div\");\n      this.scrollableDiv.classList.add(\"enchant-scrollable-content\");\n      this.scrollableDiv.style.position = \"absolute\";\n      this.scrollableDiv.style.top = \"0\";\n      this.scrollableDiv.style.left = \"0\";\n      this.scrollableDiv.style.width = \"100%\";\n      this.scrollableDiv.style.height = \"100%\";\n      this.scrollableDiv.style.overflow = \"auto\";\n\n      this.scrollableDiv.innerHTML = this.element.innerHTML;\n      this.element.innerHTML = \"\";\n      this.element.appendChild(this.scrollableDiv);\n\n      // We create an instance of the scrollbar and append it to the element\n      this.scrollbar = new Scrollbar(this.scrollableDiv, this.options, Direction.VERTICAL);\n      this.element.appendChild(this.scrollbar.getElement());\n    } else {\n      this.element = document.body;\n\n      this.scrollbar = new Scrollbar(this.element, this.options, Direction.VERTICAL);\n      this.element.appendChild(this.scrollbar.getElement());\n    }\n\n\n    this.injectStyle();\n  }\n\n  getElement(): HTMLElement {\n    return this.element;\n  }\n\n  getScrollableDiv(): HTMLElement {\n    return this.scrollableDiv;\n  }\n\n  getScrollbar(): Scrollbar {\n    return this.scrollbar;\n  }\n\n  // TODO: add browser compatibility\n  injectStyle() {\n    const head = document.head || document.getElementsByTagName(\"head\")[0];\n    const style = document.createElement(\"style\");\n\n    style.appendChild(\n      document.createTextNode(`\n          .enchant-scrollable-content::-webkit-scrollbar {\n              display: none;\n          }\n          .enchant-scrollable-content {\n              scrollbar-width: none;\n            }\n          `)\n    );\n\n    // if the target element is the body\n    if (this.element === document.body) {\n      style.appendChild(\n        document.createTextNode(`\n                ::-webkit-scrollbar {\n                    display: none;\n                }\n                body {\n                    scrollbar-width: none;\n                }\n            `)\n      );\n    }\n\n    head.appendChild(style);\n  }\n}\n\nexport { EnchantScrollbar };\n","\nimport Track from \"./track\";\nimport Direction from \"./direction\";\nimport { mouseHandler } from \"../events/index\";\nimport { scrollHandler } from \"../events/index\";\nimport { Options } from \"../interfaces\";\n\nclass Scrollbar {\n    private element!: HTMLElement;\n    private container: HTMLElement;\n    private options: Options;\n    private direction: Direction\n    private track: Track;\n\n    constructor(container?: HTMLElement, options?: Options, direction: Direction = Direction.VERTICAL) {\n        this.options = options;\n\n        if (container !== document.body) {\n            this.container = container;\n            this.direction = direction;\n            this.track = new Track(container, this.options);\n            this.createScrollbar('absolute');\n        }\n        else {\n            this.container = document.body;\n            this.direction = direction;\n            this.track = new Track(container, this.options);\n            this.createScrollbar('absolute');\n            this.createScrollbar('fixed');\n        }\n\n        \n\n        this.addEventListener();\n        \n        \n        this.init();\n    }\n\n    init(): void {\n\n        mouseHandler(this);\n\n        setTimeout(() => {\n            if (this.track.getThumb().getMouseOnThumb()) return;\n            this.hide();\n        }, 1000);\n    }\n\n    getElement(): HTMLElement {\n        return this.element;\n    }\n\n    getContainer(): HTMLElement {\n        return this.container;\n    }\n\n    getDirection(): Direction {\n        return this.direction;\n    }\n\n    getTrack(): Track {\n        return this.track;\n    }\n\n    createScrollbar(position: string ): void {\n        this.element = document.createElement(\"div\");\n        this.element.classList.add(\"scrollbar\");\n        this.element.style.position = position;\n        this.element.style.right = \"0\";\n        this.element.style.top = \"0\";\n        this.element.style.height = \"100%\";\n        this.element.style.width = \"10px\";\n        this.element.style.transition = \"opacity 0.5s ease-in-out\";\n        this.element.style.zIndex = \"999\";\n        this.element.appendChild(this.track.getElement());\n    }\n\n\n    show(): void {\n        this.element.style.opacity = \"1\";\n    }\n\n    hide(): void {\n        this.element.style.opacity = \"0\";\n    }\n\n    addEventListener() {\n        scrollHandler(this.container, this);\n    }\n\n    syncScrollbar(percentage: number): void {\n        this.track.getThumb().setPosition(percentage * (this.track.getElement().offsetHeight - this.track.getThumb().getElement().offsetHeight));\n    }\n\n\n}\n\nexport default Scrollbar;","import Thumb from \"./thumb\";\nimport { Options } from \"../interfaces\";\n\nclass Track {\n    private element!: HTMLDivElement;\n    private container: any;\n    private options: Options;\n    private thumb: Thumb;\n    private mouseOnTrack: boolean = false;\n\n    constructor(container: HTMLElement, options?: Options) {\n        // console.log(options)\n        this.container = container;\n        this.options = options;\n\n        this.thumb = new Thumb(container, options);\n        this.init();\n    }\n\n    init(): void {\n        this.element = document.createElement(\"div\");\n        this.element.classList.add(\"scrollbar-track\");\n        this.element.style.position = \"absolute\";\n        this.element.style.top = \"0\";\n        this.element.style.right = \"0\";\n        this.element.style.bottom = \"0\";\n        this.element.style.width = \"8px\";\n        this.element.style.height = \"100%\";\n        this.element.style.borderRadius = `${this.options?.borderRadius }px`;\n        this.element.style.backgroundColor = \"rgba(255, 255, 255, 0.2)\";\n\n        this.element.appendChild(this.thumb.getElement());\n\n        if (this.container === document.body) {\n            this.thumb.setHeight(window.innerHeight / document.body.scrollHeight * window.innerHeight);\n        }\n        else {\n            this.thumb.setHeight(this.container.clientHeight / this.container.scrollHeight * this.container.clientHeight);\n        }\n            \n    }\n\n    getElement(): HTMLElement {\n        return this.element;\n    }\n\n    getThumb(): Thumb {\n        return this.thumb;\n    }\n\n    getContainer(): HTMLElement {\n        return this.container;\n    }\n\n    getMouseOnTrack(): boolean {\n        return this.mouseOnTrack;\n    }\n\n    addEventListener(): void {\n        \n    }\n\n    show(): void {\n\n    }\n\n    hide(): void {\n\n    }\n}\n\nexport default Track;","class Thumb {\n    private element!: HTMLElement;\n    private container: any;\n    private options: any;\n    private mouseOnThumb: boolean = false;\n\n\n    constructor(container: HTMLElement, options?: any) {\n        this.container = container;\n        this.options = options;\n\n        this.element = document.createElement(\"div\");\n        this.element.classList.add(\"scrollbar-thumb\");\n        this.element.style.position = \"absolute\";\n        this.element.style.top = \"0\";\n        this.element.style.width = \"8px\";\n        this.element.style.backgroundColor = \"#999\";\n        this.element.style.borderRadius = `${this.options?.borderRadius}px`;\n\n        // console.log(this.options);\n\n        this.init();\n    }\n\n    init(): void {\n\n    }\n\n    getElement(): HTMLElement {\n        return this.element;\n    }\n\n    getContainer(): HTMLElement {\n        return this.container;\n    }\n\n    getMouseOnThumb(): boolean {\n        return this.mouseOnThumb;\n    }\n\n    setHeight(height: number): void {\n        this.element.style.height = `${height}px`;\n    }\n\n    setPosition(value: number): void {\n        this.element.style.top = `${value}px`;\n    }\n    \n    show(): void {\n\n    }\n\n    hide(): void {\n\n    }\n    \n}\n\nexport default Thumb;","enum Direction {\n  VERTICAL,\n  HORIZONTAL\n}\n\nexport default Direction;\n","import Scrollbar from \"../scrollbar/index\";\n\nlet dragging = false;\n\nexport function mouseHandler(scrollbar: Scrollbar) {\n    let container = scrollbar.getContainer();\n    const trackElement = scrollbar.getTrack().getElement();\n    const thumbElement = scrollbar.getTrack().getThumb().getElement();\n    let offsetY = 0;\n    let mouseOnThumb = false;\n\n    if (container === document.body) {\n        container = document.body;\n    }\n\n    scrollbar.getTrack().getElement().addEventListener(\"mousedown\", (e) => {\n        if (mouseOnThumb) return;\n\n        e.preventDefault();\n        const boundaryRect = scrollbar.getTrack().getElement().getBoundingClientRect();\n        let y = e.clientY - boundaryRect.top - thumbElement.offsetHeight / 2;\n        y = Math.max(0, Math.min(y, boundaryRect.height - thumbElement.offsetHeight));\n        thumbElement.style.top = `${y}px`;\n  \n        const scrollPercentage = y / (boundaryRect.height - thumbElement.offsetHeight);\n        container.scrollTop = scrollPercentage * (container.scrollHeight - container.clientHeight); \n        mouseDownHandler(e);\n    });\n\n    scrollbar.getElement().addEventListener('mouseover', () => {\n        scrollbar.show();\n    });\n\n    scrollbar.getElement().addEventListener('mouseleave', () => {\n        if (dragging) return;\n        scrollbar.hide();\n    });\n\n    thumbElement.addEventListener(\"mouseenter\", () => mouseOnThumb = true);\n    thumbElement.addEventListener(\"mouseleave\", () => mouseOnThumb = false);\n\n    thumbElement.addEventListener(\"mousedown\", mouseDownHandler);\n\n    function mouseDownHandler(e: MouseEvent) {\n        e.preventDefault();\n        dragging = true;\n        offsetY = e.clientY - scrollbar.getTrack().getElement().getBoundingClientRect().top - scrollbar.getTrack().getThumb().getElement().offsetTop;\n\n        document.addEventListener(\"mousemove\", mouseMoveHandler);\n        document.addEventListener(\"mouseup\", mouseUpHandler);\n    }\n\n    function mouseMoveHandler(e: MouseEvent) {\n        e.preventDefault();\n        const boundaryRect = scrollbar.getTrack().getElement().getBoundingClientRect();\n        let y = e.clientY - boundaryRect.top - offsetY;\n        y = Math.max(0, Math.min(y, boundaryRect.height - scrollbar.getTrack().getThumb().getElement().offsetHeight));\n        scrollbar.getTrack().getThumb().setPosition(y);\n\n        const scrollPercentage = y / (boundaryRect.height - scrollbar.getTrack().getThumb().getElement().offsetHeight);\n\n        if (container === document.body) {\n            window.scrollTo(0, scrollPercentage * (document.body.scrollHeight - window.innerHeight));\n        } else {\n            container.scrollTop = scrollPercentage * (container.scrollHeight - container.clientHeight);\n        }\n    }\n\n    function mouseUpHandler(e: MouseEvent) {\n        e.preventDefault();\n        dragging = false;\n\n        document.removeEventListener(\"mousemove\", mouseMoveHandler);\n        document.removeEventListener(\"mouseup\", mouseUpHandler);\n\n        if (!mouseOnThumb) {\n            scrollbar.hide();\n        }\n    }\n\n}\n\nexport function scrollHandler(scrollableDiv: HTMLElement, scrollbar: Scrollbar) {\n    if (scrollableDiv === document.body) {\n        window.addEventListener('scroll', () => {\n            if (dragging) return;\n            let percentage = window.scrollY / (document.body.scrollHeight - window.innerHeight);\n            scrollbar.syncScrollbar(percentage);\n            scrollbar.show();\n        });\n    \n        window.addEventListener('scrollend', () => {\n            if (!dragging) {\n                scrollbar.hide();\n            }\n        });\n    }\n    else {\n        scrollableDiv.addEventListener('scroll', () => {\n            if (dragging) return;\n            let percentage = scrollableDiv.scrollTop / (scrollableDiv.scrollHeight - scrollableDiv.clientHeight);\n            scrollbar.syncScrollbar(percentage);\n            scrollbar.show();\n        });\n    \n        scrollableDiv.addEventListener('scrollend', () => {\n            if (!dragging) {\n                scrollbar.hide();\n            }\n        });\n    }\n    \n}\n\n"],"names":[],"version":3,"file":"index.js.map"}